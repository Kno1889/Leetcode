# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def isValidBST(self, root: Optional[TreeNode]) -> bool:
        # recursive DFS
        def validateSubtree(node):
            if node:
                if node.left:
                    if node.left.val > node.val:
                        return False
                
                if node.right:
                    if node.right.val < node.val:
                        return False
                
                validateSubtree(node.left)
                validateSubtree(node.right)
            return True

        validateSubtree(root)
